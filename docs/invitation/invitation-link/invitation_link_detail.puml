@startuml invitation_link_detail

title 邀请链接管理子模块 - 详细设计 / Invitation Link Management Module - Detailed Design

package "邀请链接聚合 / Invitation Link Aggregate" {
    class InvitationLink <<邀请链接>> {
        +id: LinkId                                // 链接ID / Link ID
        +invitationCodeId: InvitationCodeId        // 邀请码ID / Invitation Code ID
        +originalUrl: String                       // 原始URL / Original URL
        +shortUrl: String                          // 短链URL / Short URL
        +platformType: PlatformType                // 平台类型 / Platform Type
        +platformConfig: Json                      // 平台配置 / Platform Config
        +encryptedParams: String                   // 加密参数 / Encrypted Params
        +plainParams: Json                         // 明文参数 / Plain Params
        +trackingParams: Json                      // 追踪参数 / Tracking Params
        +destination: InvitationDestination        // 邀请去向 / Destination
        +accessCount: Integer                      // 访问次数 / Access Count
        +lastAccessAt: DateTime                    // 最后访问时间 / Last Access At
        +createdAt: DateTime                       // 创建时间 / Created At
        --
        +generate(destination, platform): InvitationLink // 生成链接 / Generate
        +parse(url): Parameters                    // 解析URL / Parse
        +redirect(): RedirectResult                // 重定向 / Redirect
        +recordAccess(context): void               // 记录访问 / Record Access
        +encrypt(params): String                   // 加密参数 / Encrypt
        +decrypt(encryptedParams): Parameters      // 解密参数 / Decrypt
        +isValid(): Boolean                        // 是否有效 / Is Valid
        +isExpired(): Boolean                      // 是否过期 / Is Expired
        +getStatistics(): LinkStatistics           // 获取统计 / Get Statistics
    }

    class InvitationDestination <<邀请去向>> {
        +id: DestinationId
        +type: DestinationType
        +name: String
        +description: String
        +targetUrl: String
        +targetId: String
        +paramConfig: Json
        +platformConfigs: Collection<PlatformConfig>
        +isDefault: Boolean
        +isActive: Boolean
        +sortOrder: Integer
        --
        +createLink(platform): InvitationLink
        +validateConfig(): ValidationResult
        +isSupported(platform): Boolean
        +getTargetUrl(params): String
        +merge(params): Parameters
    }

    class LinkAccessLog <<访问日志>> {
        +id: AccessLogId
        +linkId: LinkId
        +invitationCode: String
        +visitor: Visitor
        +accessTime: DateTime
        +platformType: PlatformType
        +deviceInfo: DeviceInfo
        +locationInfo: LocationInfo
        +referer: String
        +userAgent: String
        +ipAddress: String
        +redirectResult: RedirectResult
        +extraData: Json
        --
        +record(context): void
        +analyze(): AccessAnalysis
    }
}

package "值对象" {
    class Parameters <<参数对象>> {
        +required: Map<String, String>
        +optional: Map<String, String>
        +tracking: Map<String, String>
        +custom: Map<String, String>
        --
        +merge(other): Parameters
        +filter(keys): Parameters
        +validate(): ValidationResult
        +toQueryString(): String
        +fromQueryString(query): Parameters
    }

    class DeviceInfo <<设备信息>> {
        +deviceType: String
        +osType: String
        +osVersion: String
        +browserType: String
        +browserVersion: String
        +screenSize: String
        +language: String
        --
        +detect(userAgent): DeviceInfo
        +isMobile(): Boolean
        +supportDeepLink(): Boolean
    }

    class LocationInfo <<位置信息>> {
        +country: String
        +province: String
        +city: String
        +latitude: Double
        +longitude: Double
        --
        +fromIP(ipAddress): LocationInfo
        +getDistance(other): Double
    }

    class RedirectResult <<重定向结果>> {
        +success: Boolean
        +targetUrl: String
        +redirectType: RedirectType
        +errorCode: String
        +errorMessage: String
        +redirectTime: DateTime
        --
        +createSuccess(url, type): RedirectResult
        +createFailure(error): RedirectResult
    }

    class LinkStatistics <<链接统计>> {
        +linkId: LinkId
        +totalAccess: Integer
        +uniqueVisitors: Integer
        +successRedirects: Integer
        +failedRedirects: Integer
        +averageResponseTime: Duration
        +topPlatforms: Map<PlatformType, Integer>
        +topLocations: Map<String, Integer>
        --
        +calculate(logs): LinkStatistics
        +getConversionRate(): Double
    }

    class PlatformConfig <<平台配置>> {
        +platformType: PlatformType
        +urlTemplate: String
        +paramMapping: Map<String, String>
        +deepLinkScheme: String
        +fallbackUrl: String
        +isEnabled: Boolean
        --
        +buildUrl(params): String
        +parseUrl(url): Parameters
        +supportsDeepLink(): Boolean
    }
}

package "领域服务" {
    class LinkGenerator <<链接生成器>> {
        --
        +generateLink(code, destination, platform): InvitationLink
        +generateBatch(codes, destination): Collection<InvitationLink>
        +adaptToPlatform(link, platform): String
        +validateDestination(destination): ValidationResult
    }

    class ParameterProcessor <<参数处理器>> {
        --
        +encryptParams(params): String
        +decryptParams(encrypted): Parameters
        +signParams(params): String
        +verifySignature(params, signature): Boolean
        +mergeParams(base, override): Parameters
    }

    class RedirectHandler <<重定向处理器>> {
        --
        +redirect(link, context): RedirectResult
        +detectPlatform(userAgent): PlatformType
        +buildRedirectUrl(destination, params): String
        +handleDeepLink(link, context): RedirectResult
        +handleFallback(link, context): RedirectResult
    }

    class AccessTracker <<访问追踪器>> {
        --
        +trackAccess(link, context): void
        +recordRedirect(link, result): void
        +generateStatistics(linkId, period): LinkStatistics
        +detectAnomalous(accessLogs): Collection<AccessLog>
    }

    class ShortUrlService <<短链服务>> {
        --
        +generateShortUrl(originalUrl): String
        +expandShortUrl(shortUrl): String
        +validateShortUrl(shortUrl): Boolean
        +getClickStatistics(shortUrl): ClickStatistics
    }
}

package "枚举类型" {
    enum DestinationType <<去向类型>> {
        REGISTER
        PRODUCT
        ACTIVITY
        HOME
        CUSTOM
    }

    enum PlatformType <<平台类型>> {
        WEB
        H5
        MINIPROGRAM
        APP
        WECHAT
        ALIPAY
    }

    enum RedirectType <<重定向类型>> {
        DIRECT
        DEEP_LINK
        FALLBACK
        ERROR
    }
}

package "仓储接口" {
    interface InvitationLinkRepository {
        +findById(id): InvitationLink
        +findByCode(codeId): Collection<InvitationLink>
        +save(link): void
        +delete(link): void
        +findByDestination(destinationId): Collection
        +findExpiring(days): Collection
    }

    interface InvitationDestinationRepository {
        +findById(id): InvitationDestination
        +findByType(type): Collection
        +findActive(): Collection
        +save(destination): void
        +findDefault(): InvitationDestination
    }

    interface LinkAccessLogRepository {
        +save(log): void
        +findByLink(linkId, period): Collection
        +findByCode(codeId, period): Collection
        +getStatistics(linkId, period): LinkStatistics
        +findAnomalous(criteria): Collection
    }
}

' 关系定义
InvitationLink ||--|| InvitationDestination : "指向"
InvitationLink ||--o{ LinkAccessLog : "记录"
InvitationLink ||--|| Parameters : "包含"
InvitationLink ||--|| LinkStatistics : "统计"

InvitationDestination ||--o{ PlatformConfig : "配置"
LinkAccessLog ||--|| DeviceInfo : "设备信息"
LinkAccessLog ||--|| LocationInfo : "位置信息"
LinkAccessLog ||--|| RedirectResult : "跳转结果"

InvitationLink ||--|| DestinationType : "去向类型"
InvitationLink ||--|| PlatformType : "平台类型"
RedirectResult ||--|| RedirectType : "跳转类型"

LinkGenerator ..> InvitationLink : "生成"
ParameterProcessor ..> Parameters : "处理"
RedirectHandler ..> RedirectResult : "处理"
AccessTracker ..> LinkAccessLog : "跟踪"
ShortUrlService ..> InvitationLink : "短链"

InvitationLinkRepository ..> InvitationLink : "存储"
InvitationDestinationRepository ..> InvitationDestination : "存储"
LinkAccessLogRepository ..> LinkAccessLog : "存储"

@enduml 