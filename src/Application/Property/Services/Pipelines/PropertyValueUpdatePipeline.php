<?php

namespace RedJasmine\Product\Application\Property\Services\Pipelines;


use Closure;
use RedJasmine\Product\Application\Property\Services\ProductPropertyValueQueryService;
use RedJasmine\Product\Application\Property\UserCases\Queries\PropertyValuePaginateQuery;
use RedJasmine\Support\Application\CommandHandler;
use RedJasmine\Support\Application\CommandHandlerPipeline;

class PropertyValueUpdatePipeline extends CommandHandlerPipeline
{
    public function __construct(
        protected ProductPropertyValueQueryService $queryService,
    )
    {
    }


    public function executing(CommandHandler $handler, Closure $next)
    {

        $paginate = $this->queryService->withQuery(function ($query) use ($handler, $next) {
            $query->where('id', '<>', $handler->aggregate->id);
        })->paginate(PropertyValuePaginateQuery::from([
                                                          'name' => $handler->getArguments()[0]->name,
                                                          'pid'  => $handler->aggregate->pid,
                                                      ]));

        if (count($paginate->items())) {
            // TODO 需要改造
            throw new \RuntimeException('Property value update failed');
        }


        return parent::executing($handler, $next); // TODO: Change the autogenerated stub
    }

    public function execute(CommandHandler $handler, Closure $next)
    {

        return parent::execute($handler, $next); // TODO: Change the autogenerated stub
    }

    public function executed(CommandHandler $handler, Closure $next)
    {

        return parent::executed($handler, $next); // TODO: Change the autogenerated stub
    }


}
