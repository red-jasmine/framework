<?php

namespace RedJasmine\Support\Exceptions;


use Illuminate\Contracts\Container\Container;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Support\Arr;
use Throwable;

class Handler extends ExceptionHandler
{
    public function __construct(Container $container)
    {
        parent::__construct($container);

        // 业务异常 进行
        $this->ignore(AbstractException::class);
    }

    protected function convertExceptionToArray(Throwable $e) : array
    {
        if ($e instanceof AbstractException) {
            return config('app.debug') ? [
                'data'      => $e->getData(),
                'code'      => $e->getCode(),
                'message'   => $e->getMessage(),
                'errors'    => $e->errors(),
                'exception' => get_class($e),
                'file'      => $e->getFile(),
                'line'      => $e->getLine(),
                'trace'     => collect($e->getTrace())->map(fn($trace) => Arr::except($trace, [ 'args' ]))->all(),
            ] : [
                'data'    => $e->getData(),
                'code'    => $e->getCode(),
                'message' => $e->getMessage(),
                'errors'  => $e->errors(),
            ];

            return [

            ];
        }
        return parent::convertExceptionToArray($e); // TODO: Change the autogenerated stub
    }

}
